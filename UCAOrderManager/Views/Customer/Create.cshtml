@model UCAOrderManager.Models.Customer.CustomerViewModel

@{
    ViewBag.Title = "Customer Registration";
}

<script type="text/javascript">
    function CheckEMailExists()
    {
        var email = document.getElementById("txtEMailID").value;
        $.ajax({
            type: "POST",
            url: '@Url.Action("IsEmailIDExists", "Customer")?EmailID=' + email,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Response == "True") {

                    var validator = $("form").validate();
                    validator.showErrors({ EMailID: "Entered email id alerady registered. Please login if you already have account." });
                }
            },
            //error: function (result) {
            //    alert('Error occured ' + result.responseText);
            //}
        });
    }

    function RemoveEmailError()
    {
        var validator = $("form").validate();
        validator.showErrors({ EMailID: null});
    }
</script>

<h2>@(Model == null || Model.UserID == 0? "Registration" : "Edit")</h2>

@using (Html.BeginForm("Create", "Customer")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true)

        @if (Model != null && Model.UserID != 0)
        {
            @Html.HiddenFor(r=> r.UserID)
        }
        
        <div class="form-group">
            @Html.LabelFor(model => model.EMailID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EMailID, new { @id = "txtEMailID", @class = "form-control", @OnFocus = "RemoveEmailError()", @OnBlur = "CheckEMailExists()" })
                @Html.ValidationMessageFor(model => model.EMailID, null, new { @id = "vmEMailID"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BusinessName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BusinessName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContactName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Postcode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Postcode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Country, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IntPhoneNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IntPhoneNo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IntPhoneNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AirportDestCity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.AirportDestCity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AirportDestCity)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
